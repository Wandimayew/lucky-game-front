{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andargchew Moges\\\\Desktop\\\\temesgen\\\\E-learnin-final\\\\Membership\\\\src\\\\com\\\\Speedometer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Speedometer = ({\n  value\n}) => {\n  _s();\n  // State to hold the current count for animation\n  const [count, setCount] = useState(0);\n\n  // Effect to update the count rapidly until it reaches the actual value\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(prevCount => {\n        const nextCount = prevCount + 1;\n        return nextCount > value ? value : nextCount;\n      });\n    }, 1);\n    return () => clearInterval(interval);\n  }, [value]);\n\n  // Calculate the fill percentage of the circle\n  const fillPercentage = count / 5500 * 100;\n\n  // Calculate the stroke-dasharray for the circular border animation\n  const strokeDashArray = Math.ceil(2 * Math.PI * 15 * 0.9);\n  const animatedStrokeDashArray = fillPercentage / 100 * strokeDashArray;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-40 h-40\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"absolute top-0 left-0 right-0 bottom-0 rounded-full\",\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: \"0 0 32 32\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"16\",\n            cy: \"16\",\n            r: \"15\",\n            fill: \"none\",\n            stroke: \"#F59E0B\" // Orange border color\n            ,\n            strokeWidth: \"4\" // Increased border width\n            ,\n            strokeLinecap: \"round\",\n            strokeDasharray: `${animatedStrokeDashArray},${strokeDashArray}`,\n            strokeDashoffset: strokeDashArray - animatedStrokeDashArray\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"16\",\n            cy: \"16\",\n            r: \"15\",\n            fill: \"none\",\n            stroke: \"#E5E7EB\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-bold text-gray-700\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Speedometer, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Speedometer;\nconst App = () => {\n  const userCount = 5500; // Example user count\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"User Speedometer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Speedometer, {\n      value: userCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Speedometer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Speedometer","value","_s","count","setCount","interval","setInterval","prevCount","nextCount","clearInterval","fillPercentage","strokeDashArray","Math","ceil","PI","animatedStrokeDashArray","className","children","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeDashoffset","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","userCount","_c2","$RefreshReg$"],"sources":["C:/Users/Andargchew Moges/Desktop/temesgen/E-learnin-final/Membership/src/com/Speedometer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Speedometer = ({ value }) => {\r\n  // State to hold the current count for animation\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Effect to update the count rapidly until it reaches the actual value\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((prevCount) => {\r\n        const nextCount = prevCount + 1;\r\n        return nextCount > value ? value : nextCount;\r\n      });\r\n    }, 1);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [value]);\r\n\r\n  // Calculate the fill percentage of the circle\r\n  const fillPercentage = (count / 5500) * 100;\r\n\r\n  // Calculate the stroke-dasharray for the circular border animation\r\n  const strokeDashArray = Math.ceil(2 * Math.PI * 15 * 0.9);\r\n  const animatedStrokeDashArray = fillPercentage / 100 * strokeDashArray;\r\n\r\n  return (\r\n    <div className=\"relative w-40 h-40\">\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        <div className=\"relative w-full h-full\">\r\n          <svg\r\n            className=\"absolute top-0 left-0 right-0 bottom-0 rounded-full\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            viewBox=\"0 0 32 32\"\r\n          >\r\n            <circle\r\n              cx=\"16\"\r\n              cy=\"16\"\r\n              r=\"15\"\r\n              fill=\"none\"\r\n              stroke=\"#F59E0B\" // Orange border color\r\n              strokeWidth=\"4\" // Increased border width\r\n              strokeLinecap=\"round\"\r\n              strokeDasharray={`${animatedStrokeDashArray},${strokeDashArray}`}\r\n              strokeDashoffset={strokeDashArray - animatedStrokeDashArray}\r\n            />\r\n            <circle\r\n              cx=\"16\"\r\n              cy=\"16\"\r\n              r=\"15\"\r\n              fill=\"none\"\r\n              stroke=\"#E5E7EB\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n            />\r\n          </svg>\r\n          <div className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\r\n            <span className=\"text-lg font-bold text-gray-700\">{count}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const userCount = 5500; // Example user count\r\n\r\n  return (\r\n    <div className=\"App p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">User Speedometer</h1>\r\n      <Speedometer value={userCount} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}