{"ast":null,"code":"var _jsxFileName = \"/home/wandi/Downloads/Telegram Desktop/Membership/src/com/Speedometer1.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Speedometer1 = ({\n  value\n}) => {\n  _s();\n  // State to hold the current count for animation\n  const [count, setCount] = useState(0);\n  // State to determine if animation is complete\n  const [animationComplete, setAnimationComplete] = useState(false);\n\n  // Effect to update the count rapidly until it reaches the actual value\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(prevCount => {\n        const nextCount = prevCount + 1;\n        if (nextCount > value) {\n          setAnimationComplete(true);\n          clearInterval(interval);\n          return value;\n        }\n        return nextCount;\n      });\n    }, 500); // Increase the interval time to slow down the count\n\n    return () => clearInterval(interval);\n  }, [value]);\n\n  // Calculate the fill percentage of the circle\n  const fillPercentage = count / 4 * 100; // Update the total count to 4\n\n  // Calculate the stroke-dasharray for the circular border animation\n  const strokeDashArray = Math.ceil(2 * Math.PI * 15 * 0.9);\n  const animatedStrokeDashArray = fillPercentage / 100 * strokeDashArray;\n  const strokeDashoffset = animationComplete ? 0 : Math.max(strokeDashArray - animatedStrokeDashArray, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-40 h-40\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"absolute top-0 left-0 right-0 bottom-0 rounded-full\",\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: \"0 0 32 32\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"16\",\n            cy: \"16\",\n            r: \"15\",\n            fill: \"none\",\n            stroke: \"#F59E0B\" // Orange border color\n            ,\n            strokeWidth: \"4\" // Increased border width\n            ,\n            strokeLinecap: \"round\",\n            strokeDasharray: `${strokeDashArray} ${strokeDashArray}`,\n            strokeDashoffset: strokeDashoffset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"16\",\n            cy: \"16\",\n            r: \"15\",\n            fill: \"none\",\n            stroke: \"#E5E7EB\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-bold text-white\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Speedometer1, \"RV6A8u5P6GlmF8NJ2X7BeDesGoA=\");\n_c = Speedometer1;\nconst App = () => {\n  _s2();\n  // const [userCount,setUserCount]=useState(0);\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/api/category/getCategoryCount\").then(response => {\n      console.log(\"Category count is: \", response.data.count);\n      // setUserCount(response.data.count);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const userCount = 4; // Start from 0\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App p-4 mr-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold p-5 pl-10 text-start\",\n      children: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Speedometer1, {\n      value: userCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Speedometer1\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Speedometer1","value","_s","count","setCount","animationComplete","setAnimationComplete","interval","setInterval","prevCount","nextCount","clearInterval","fillPercentage","strokeDashArray","Math","ceil","PI","animatedStrokeDashArray","strokeDashoffset","max","className","children","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeLinecap","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","get","then","response","console","log","data","catch","error","userCount","_c2","$RefreshReg$"],"sources":["/home/wandi/Downloads/Telegram Desktop/Membership/src/com/Speedometer1.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios  from 'axios';\r\n\r\nconst Speedometer1 = ({ value }) => {\r\n  // State to hold the current count for animation\r\n  const [count, setCount] = useState(0);\r\n  // State to determine if animation is complete\r\n  const [animationComplete, setAnimationComplete] = useState(false);\r\n\r\n  // Effect to update the count rapidly until it reaches the actual value\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((prevCount) => {\r\n        const nextCount = prevCount + 1;\r\n        if (nextCount > value) {\r\n          setAnimationComplete(true);\r\n          clearInterval(interval);\r\n          return value;\r\n        }\r\n        return nextCount;\r\n      });\r\n    }, 500); // Increase the interval time to slow down the count\r\n\r\n    return () => clearInterval(interval);\r\n  }, [value]);\r\n\r\n  // Calculate the fill percentage of the circle\r\n  const fillPercentage = (count / 4) * 100; // Update the total count to 4\r\n\r\n  // Calculate the stroke-dasharray for the circular border animation\r\n  const strokeDashArray = Math.ceil(2 * Math.PI * 15 * 0.9);\r\n  const animatedStrokeDashArray = fillPercentage / 100 * strokeDashArray;\r\n  const strokeDashoffset = animationComplete ? 0 : Math.max(strokeDashArray - animatedStrokeDashArray, 0);\r\n\r\n  return (\r\n    <div className=\"relative w-40 h-40\">\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        <div className=\"relative w-full h-full\">\r\n          <svg\r\n            className=\"absolute top-0 left-0 right-0 bottom-0 rounded-full\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            viewBox=\"0 0 32 32\"\r\n          >\r\n            <circle\r\n              cx=\"16\"\r\n              cy=\"16\"\r\n              r=\"15\"\r\n              fill=\"none\"\r\n              stroke=\"#F59E0B\" // Orange border color\r\n              strokeWidth=\"4\" // Increased border width\r\n              strokeLinecap=\"round\"\r\n              strokeDasharray={`${strokeDashArray} ${strokeDashArray}`}\r\n              strokeDashoffset={strokeDashoffset}\r\n            />\r\n            <circle\r\n              cx=\"16\"\r\n              cy=\"16\"\r\n              r=\"15\"\r\n              fill=\"none\"\r\n              stroke=\"#E5E7EB\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n            />\r\n          </svg>\r\n          <div className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\r\n            <span className=\"text-lg font-bold text-white\">{count}</span> {/* Set text color to white */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  // const [userCount,setUserCount]=useState(0);\r\n  useEffect(()=>{\r\n    axios\r\n      .get(\"http://localhost:3002/api/category/getCategoryCount\")\r\n      .then((response) => {\r\n        console.log(\"Category count is: \",response.data.count);\r\n        // setUserCount(response.data.count);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n  },[]) \r\n\r\n  const userCount = 4; // Start from 0\r\n\r\n  return (\r\n    <div className=\"App p-4 mr-10\">\r\n      <h1 className=\"text-2xl font-bold p-5 pl-10 text-start\">Category</h1>\r\n      \r\n      <Speedometer1 value={userCount} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}